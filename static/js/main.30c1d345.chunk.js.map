{"version":3,"sources":["components/CommentItem/CommentItem.jsx","components/CommentForm/CommentForm.jsx","components/CommentsList/CommentsList.jsx","App.jsx","index.js"],"names":["useStyle","makeStyles","commentsItem","padding","marginBottom","cardMediaWrapper","display","flexDirection","alignItems","justifyContent","cardMedia","avatar","margin","borderRadius","cardContent","text","wordBreak","ratingWrapper","rating","CommentItem","comment","handleChangeRating","classes","useState","isOpen","setIsOpen","id","name","email","timestamp","useEffect","Card","className","Collapse","in","collapsedSize","Box","alt","Typography","variant","formatDistanceToNow","Date","locale","ru","addSuffix","CardContent","Button","size","onClick","formWrapper","form","width","CommentForm","createNewComment","setComment","errors","setErrors","formValid","setFormValid","component","autoComplete","TextField","label","value","error","onChange","e","prev","target","test","multiline","rows","type","preventDefault","newComment","uuidv4","now","nameError","emailError","textError","disabled","commentsList","emptyTextWrapper","CommentsList","comments","setComments","prevComments","map","length","prevComment","app","boxShadow","backgroundColor","minHeight","App","Container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30c1d345.chunk.js","sourcesContent":["import { makeStyles } from \"@mui/styles\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Gravatar from \"react-gravatar\";\r\nimport { Button, Card, CardContent, Collapse, Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport formatDistanceToNow from \"date-fns/formatDistanceToNow\";\r\nimport { ru } from \"date-fns/locale\";\r\n\r\nconst useStyle = makeStyles({\r\n  commentsItem: {\r\n    padding: \"10px\",\r\n    marginBottom: \"10px\",\r\n  },\r\n  cardMediaWrapper: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  cardMedia: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: \"0 30px\",\r\n    borderRadius: \"50%\",\r\n  },\r\n  cardContent: {\r\n    margin: 0,\r\n    padding: \"10px\",\r\n  },\r\n  text: {\r\n    wordBreak: \"break-all\",\r\n  },\r\n  ratingWrapper: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"end\",\r\n    alignItems: \"center\",\r\n  },\r\n  rating: {\r\n    padding: \"0px 20px\",\r\n  },\r\n});\r\n\r\n/**\r\n * Компонент комментария\r\n * @param {object} comment - комментарий\r\n * @param {function} handleChangeRating - метод изменения рейтинга комментария\r\n */\r\n\r\nconst CommentItem = ({ comment, handleChangeRating }) => {\r\n  const classes = useStyle();\r\n  const [isOpen, setIsOpen] = useState(true);\r\n  const { id, name, email, timestamp, text, rating } = comment;\r\n\r\n  useEffect(() => {\r\n    if (rating < -10) {\r\n      setIsOpen(false);\r\n    }\r\n  }, [rating]);\r\n\r\n  return (\r\n    <Card className={classes.commentsItem}>\r\n      <Collapse in={isOpen} collapsedSize={40}>\r\n        {!isOpen ? (\r\n          <Button onClick={() => setIsOpen(true)}>Открыть комментарий</Button>\r\n        ) : (\r\n          <>\r\n            <Box className={classes.cardMediaWrapper}>\r\n              <Box className={classes.cardMedia}>\r\n                <Gravatar className={classes.avatar} alt={name} email={email} />\r\n                <Typography variant=\"h5\">{name}</Typography>\r\n              </Box>\r\n              <Typography>\r\n                {formatDistanceToNow(new Date(timestamp), {\r\n                  locale: ru,\r\n                  addSuffix: true,\r\n                })}\r\n              </Typography>\r\n            </Box>\r\n            <CardContent className={classes.cardContent}>\r\n              <Typography className={classes.text}>{text}</Typography>\r\n              <Box className={classes.ratingWrapper}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  size=\"small\"\r\n                  onClick={() => handleChangeRating(id, -1)}\r\n                >\r\n                  -\r\n                </Button>\r\n                <Typography className={classes.rating}>{rating}</Typography>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  size=\"small\"\r\n                  onClick={() => handleChangeRating(id, 1)}\r\n                >\r\n                  +\r\n                </Button>\r\n              </Box>\r\n            </CardContent>\r\n          </>\r\n        )}\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CommentItem;\r\n","import { makeStyles } from \"@mui/styles\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Button, TextField, Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst useStyle = makeStyles({\r\n  formWrapper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: \"10px 0\",\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    width: \"300px\",\r\n  },\r\n});\r\n\r\n/**\r\n * Форма создания комментария\r\n * @param {function} createNewComment - метод для создания нового комментария.\r\n */\r\n\r\nconst CommentForm = ({ createNewComment }) => {\r\n  const classes = useStyle();\r\n  const [comment, setComment] = useState({ name: \"\", email: \"\", text: \"\" });\r\n  const [errors, setErrors] = useState({\r\n    name: false,\r\n    email: false,\r\n    text: false,\r\n  });\r\n  const [formValid, setFormValid] = useState(false);\r\n\r\n  const handleChangeName = (e) => {\r\n    setComment((prev) => ({ ...prev, name: e.target.value }));\r\n    setErrors((prev) => ({ ...prev, name: false }));\r\n  };\r\n\r\n  const handleChangeEmail = (e) => {\r\n    const regexEmail = /\\S+@\\S+\\.\\S+/;\r\n    if (!!e.target.value && !regexEmail.test(e.target.value)) {\r\n      setErrors((prev) => ({ ...prev, email: true }));\r\n    } else {\r\n      setErrors((prev) => ({ ...prev, email: false }));\r\n    }\r\n    setComment((prev) => ({ ...prev, email: e.target.value }));\r\n  };\r\n\r\n  const handleChangeText = (e) => {\r\n    setComment((prev) => ({ ...prev, text: e.target.value }));\r\n    setErrors((prev) => ({ ...prev, text: false }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !comment.name ||\r\n      errors.name ||\r\n      !comment.email ||\r\n      errors.email ||\r\n      !comment.text ||\r\n      errors.text\r\n    ) {\r\n      setFormValid(false);\r\n    } else {\r\n      setFormValid(true);\r\n    }\r\n  }, [\r\n    comment.name,\r\n    errors.name,\r\n    comment.email,\r\n    errors.email,\r\n    comment.text,\r\n    errors.text,\r\n  ]);\r\n\r\n  const addNewComment = (e) => {\r\n    e.preventDefault();\r\n    if (!comment.name || !comment.email || !comment.text) {\r\n      setErrors({\r\n        name: !comment.name,\r\n        email: !comment.email,\r\n        text: !comment.text,\r\n      });\r\n      return;\r\n    }\r\n    const newComment = {\r\n      ...comment,\r\n      id: uuidv4(),\r\n      timestamp: Date.now(),\r\n      rating: 0,\r\n    };\r\n    createNewComment(newComment);\r\n    setComment({ name: \"\", email: \"\", text: \"\" });\r\n    setErrors({\r\n      nameError: false,\r\n      emailError: false,\r\n      textError: false,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.formWrapper}>\r\n      <Typography>Новый комментарий</Typography>\r\n      <Box className={classes.form} component=\"form\" autoComplete=\"off\">\r\n        <TextField\r\n          id=\"name\"\r\n          label=\"Имя\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          margin=\"dense\"\r\n          value={comment.name}\r\n          error={errors.name}\r\n          onChange={handleChangeName}\r\n        />\r\n        <TextField\r\n          id=\"email\"\r\n          label=\"Email\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          margin=\"dense\"\r\n          value={comment.email}\r\n          error={errors.email}\r\n          onChange={handleChangeEmail}\r\n        />\r\n        <TextField\r\n          id=\"text\"\r\n          label=\"Комментарий\"\r\n          multiline\r\n          rows={5}\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          margin=\"dense\"\r\n          value={comment.text}\r\n          error={errors.text}\r\n          onChange={handleChangeText}\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          size=\"medium\"\r\n          variant=\"contained\"\r\n          onClick={addNewComment}\r\n          disabled={!formValid}\r\n        >\r\n          Добавить комментарий\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CommentForm;\r\n","import { makeStyles } from \"@mui/styles\";\r\nimport { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport CommentItem from \"../CommentItem/CommentItem\";\r\nimport CommentForm from \"../CommentForm/CommentForm\";\r\nimport { Box } from \"@mui/system\";\r\nimport { Typography } from \"@mui/material\";\r\n\r\nconst useStyle = makeStyles({\r\n  commentsList: {\r\n    padding: \"10px\",\r\n  },\r\n  emptyTextWrapper: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    padding: \"50px 0\",\r\n  },\r\n});\r\n\r\n/**\r\n * Компонент списка комментариев\r\n */\r\n\r\nconst CommentsList = () => {\r\n  const classes = useStyle();\r\n  const [comments, setComments] = useState([\r\n    {\r\n      id: uuidv4(),\r\n      name: \"Kyle Mathews\",\r\n      email: \"mathews.kyle@gmail.com\",\r\n      timestamp: 1607395224000,\r\n      text: `A random paragraph can also be an excellent way for a writer\r\n             to tackle writers' block. Writing block can often happen due to being\r\n             stuck with a current project that the writer is trying to complete.\r\n             By inserting a completely random paragraph from which to begin,\r\n             it can take down some of the issues that may have been causing the writers'\r\n             block in the first place.`,\r\n      rating: 5,\r\n    },\r\n    {\r\n      id: uuidv4(),\r\n      name: \"Petr Petrov\",\r\n      email: \"Petrov@gmail.com\",\r\n      timestamp: 1628390424000,\r\n      text: `Another productive way to use this tool to begin a daily writing routine.\r\n               One way is to generate a random paragraph with the intention to try to rewrite\r\n               it while still keeping the original meaning. The purpose here is to just get the\r\n               writing started so that when the writer goes onto their day's writing projects,\r\n               words are already flowing from their fingers..`,\r\n      rating: -11,\r\n    },\r\n    {\r\n      id: uuidv4(),\r\n      name: \"Roman Makhalin\",\r\n      email: \"rn_mahalin@mail.ru\",\r\n      timestamp: 1639254205000,\r\n      text: `Ничего не понятно, но очень интересно!`,\r\n      rating: 10,\r\n    },\r\n  ]);\r\n\r\n  /**\r\n   * Добавление нового комментария\r\n   * @param {object} newComment - новый комментарий\r\n   */\r\n  const createNewComment = (newComment) => {\r\n    setComments((prevComment) => [...prevComment, newComment]);\r\n  };\r\n\r\n  /**\r\n   * Изменение рейтинга комментария\r\n   * @param {string} id - уникальный индитификатор\r\n   * @param {number} value - +1 || -1\r\n   */\r\n  const handleChangeRating = (id, value) => {\r\n    setComments((prevComments) =>\r\n      prevComments.map((comment) => ({\r\n        ...comment,\r\n        rating: comment.id === id ? comment.rating + value : comment.rating,\r\n      }))\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.commentsList}>\r\n      {comments.length ? (\r\n        comments.map((comment) => (\r\n          <CommentItem\r\n            key={comment.id}\r\n            comment={comment}\r\n            handleChangeRating={handleChangeRating}\r\n          />\r\n        ))\r\n      ) : (\r\n        <Box className={classes.emptyTextWrapper}>\r\n          <Typography variant=\"h4\">Нет комментариев</Typography>\r\n        </Box>\r\n      )}\r\n      <CommentForm createNewComment={createNewComment} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CommentsList;\r\n","import { Container } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport CommentsList from \"./components/CommentsList/CommentsList\";\r\n\r\nconst useStyle = makeStyles({\r\n  app: {\r\n    margin: \"20px auto\",\r\n    boxShadow: \"0px 5px 10px 2px rgba(34, 60, 80, 0.2)\",\r\n    backgroundColor: \"#fff\",\r\n    minHeight: \"calc(100vh - 40px)\",\r\n  },\r\n});\r\n\r\n/**\r\n * Главный компонент приложения\r\n */\r\n\r\nconst App = () => {\r\n  const classes = useStyle();\r\n  return (\r\n    <Container className={classes.app}>\r\n      <CommentsList />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}