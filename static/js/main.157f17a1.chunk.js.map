{"version":3,"sources":["components/CommentItem/CommentItem.style.js","components/CommentItem/CommentItem.jsx","components/CommentForm/CommentForm.syle.js","components/CommentForm/CommentForm.jsx","components/CommentsList/CommentsList.style.js","components/CommentsList/CommentsList.jsx","App.style.js","App.jsx","index.js"],"names":["useStyle","makeStyles","commentsItem","marginBottom","width","boxShadow","borderRadius","collapseWrapper","cardMediaWrapper","display","flexDirection","alignItems","justifyContent","paddingBottom","cardMedia","avatar","margin","text","wordBreak","ratingWrapper","rating","padding","CommentItem","comment","handleChangeRating","classes","useState","isOpen","setIsOpen","id","name","email","timestamp","useEffect","ListItem","className","Collapse","in","collapsedSize","Box","alt","Typography","variant","formatDistanceToNow","Date","locale","ru","addSuffix","cardContent","Button","size","onClick","formWrapper","form","CommentForm","createNewComment","setComment","errors","setErrors","formValid","setFormValid","component","autoComplete","TextField","label","value","error","onChange","event","prev","target","trim","test","multiline","rows","type","preventDefault","newComment","uuidv4","now","disabled","container","height","wrapperList","overflow","flex","commentsList","emptyTextWrapper","CommentsList","wrapperRef","useRef","comments","setComments","prevComments","map","current","scrollTo","top","scrollHeight","offsetHeight","length","ref","List","prevComment","app","backgroundColor","App","Container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.157f17a1.chunk.js","sourcesContent":["import { makeStyles } from \"@mui/styles\";\r\n\r\nexport const useStyle = makeStyles({\r\n  commentsItem: {\r\n    marginBottom: \"10px\",\r\n    width: \"100%\",\r\n    boxShadow: \"0px 5px 9px 3px rgba(34, 60, 80, 0.12)\",\r\n    borderRadius: \"8px\",\r\n  },\r\n  collapseWrapper: {\r\n    width: \"100%\",\r\n  },\r\n  cardMediaWrapper: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    paddingBottom: \"20px\",\r\n  },\r\n  cardMedia: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: \"0 20px\",\r\n    borderRadius: \"50%\",\r\n  },\r\n  text: {\r\n    wordBreak: \"break-all\",\r\n    paddingBottom: \"12px\",\r\n  },\r\n  ratingWrapper: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"end\",\r\n    alignItems: \"center\",\r\n  },\r\n  rating: {\r\n    padding: \"0px 20px\",\r\n  },\r\n});\r\n","import { useEffect, useState } from \"react\";\r\nimport Gravatar from \"react-gravatar\";\r\nimport formatDistanceToNow from \"date-fns/formatDistanceToNow\";\r\nimport { ru } from \"date-fns/locale\";\r\nimport { Box } from \"@mui/system\";\r\nimport { Button, Collapse, ListItem, Typography } from \"@mui/material\";\r\nimport { useStyle } from \"./CommentItem.style\";\r\n\r\n/**\r\n * Компонент комментария\r\n * @param {object} comment - комментарий\r\n * @param {function} handleChangeRating - метод изменения рейтинга комментария\r\n */\r\n\r\nconst CommentItem = ({ comment, handleChangeRating }) => {\r\n  const classes = useStyle();\r\n  const [isOpen, setIsOpen] = useState(true);\r\n  const { id, name, email, timestamp, text, rating } = comment;\r\n\r\n  useEffect(() => {\r\n    if (rating < -10) {\r\n      setIsOpen(false);\r\n    }\r\n  }, [rating]);\r\n\r\n  return (\r\n    <ListItem className={classes.commentsItem}>\r\n      <Collapse\r\n        className={classes.collapseWrapper}\r\n        in={isOpen}\r\n        collapsedSize={30}\r\n      >\r\n        {!isOpen ? (\r\n          <Button onClick={() => setIsOpen(true)}>Открыть комментарий</Button>\r\n        ) : (\r\n          <>\r\n            <Box className={classes.cardMediaWrapper}>\r\n              <Box className={classes.cardMedia}>\r\n                <Gravatar className={classes.avatar} alt={name} email={email} />\r\n                <Typography variant=\"h5\">{name}</Typography>\r\n              </Box>\r\n              <Typography>\r\n                {formatDistanceToNow(new Date(timestamp), {\r\n                  locale: ru,\r\n                  addSuffix: true,\r\n                })}\r\n              </Typography>\r\n            </Box>\r\n            <Box className={classes.cardContent}>\r\n              <Typography className={classes.text}>{text}</Typography>\r\n              <Box className={classes.ratingWrapper}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  size=\"small\"\r\n                  onClick={() => handleChangeRating(id, -1)}\r\n                >\r\n                  -\r\n                </Button>\r\n                <Typography className={classes.rating}>{rating}</Typography>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  size=\"small\"\r\n                  onClick={() => handleChangeRating(id, 1)}\r\n                >\r\n                  +\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n          </>\r\n        )}\r\n      </Collapse>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default CommentItem;\r\n","import { makeStyles } from \"@mui/styles\";\r\n\r\nexport const useStyle = makeStyles({\r\n  formWrapper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: \"10px 0\",\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    width: \"300px\",\r\n    marginBottom: \"8px\",\r\n  },\r\n});\r\n","import { useEffect, useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { Button, TextField, Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { useStyle } from \"./CommentForm.syle\";\r\n\r\n/**\r\n * Форма создания комментария\r\n * @param {function} createNewComment - метод для создания нового комментария.\r\n */\r\n\r\nconst CommentForm = ({ createNewComment }) => {\r\n  const classes = useStyle();\r\n  const [comment, setComment] = useState({ name: \"\", email: \"\", text: \"\" });\r\n  const [errors, setErrors] = useState({\r\n    name: false,\r\n    email: false,\r\n    text: false,\r\n  });\r\n  const [formValid, setFormValid] = useState(false);\r\n\r\n  const handleChangeName = (event) => {\r\n    setComment((prev) => ({ ...prev, name: event.target.value }));\r\n    setErrors((prev) => ({\r\n      ...prev,\r\n      name: event.target.value.trim() ? false : true,\r\n    }));\r\n  };\r\n\r\n  const handleChangeEmail = (event) => {\r\n    const regexEmail = /\\S+@\\S+\\.\\S+/;\r\n    if (!!event.target.value && !regexEmail.test(event.target.value)) {\r\n      setErrors((prev) => ({ ...prev, email: true }));\r\n    } else {\r\n      setErrors((prev) => ({ ...prev, email: false }));\r\n    }\r\n    setComment((prev) => ({ ...prev, email: event.target.value }));\r\n  };\r\n\r\n  const handleChangeText = (event) => {\r\n    setComment((prev) => ({ ...prev, text: event.target.value }));\r\n    setErrors((prev) => ({\r\n      ...prev,\r\n      text: event.target.value.trim() ? false : true,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !comment.name ||\r\n      errors.name ||\r\n      !comment.email ||\r\n      errors.email ||\r\n      !comment.text ||\r\n      errors.text\r\n    ) {\r\n      setFormValid(false);\r\n    } else {\r\n      setFormValid(true);\r\n    }\r\n  }, [\r\n    comment.name,\r\n    errors.name,\r\n    comment.email,\r\n    errors.email,\r\n    comment.text,\r\n    errors.text,\r\n  ]);\r\n\r\n  const addNewComment = (event) => {\r\n    event.preventDefault();\r\n    if (!comment.name || !comment.email || !comment.text) {\r\n      setErrors({\r\n        name: !comment.name,\r\n        email: !comment.email,\r\n        text: !comment.text,\r\n      });\r\n      return;\r\n    }\r\n    const newComment = {\r\n      ...comment,\r\n      id: uuidv4(),\r\n      timestamp: Date.now(),\r\n      rating: 0,\r\n    };\r\n    createNewComment(newComment);\r\n    setComment({ name: \"\", email: \"\", text: \"\" });\r\n    setErrors({\r\n      name: false,\r\n      email: false,\r\n      text: false,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.formWrapper}>\r\n      <Typography>Новый комментарий</Typography>\r\n      <Box className={classes.form} component=\"form\" autoComplete=\"off\">\r\n        <TextField\r\n          id=\"name\"\r\n          label=\"Имя\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          margin=\"dense\"\r\n          value={comment.name}\r\n          error={errors.name}\r\n          onChange={handleChangeName}\r\n        />\r\n        <TextField\r\n          id=\"email\"\r\n          label=\"Email\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          margin=\"dense\"\r\n          value={comment.email}\r\n          error={errors.email}\r\n          onChange={handleChangeEmail}\r\n        />\r\n        <TextField\r\n          id=\"text\"\r\n          label=\"Комментарий\"\r\n          multiline\r\n          rows={5}\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          margin=\"dense\"\r\n          value={comment.text}\r\n          error={errors.text}\r\n          onChange={handleChangeText}\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          size=\"medium\"\r\n          variant=\"contained\"\r\n          onClick={addNewComment}\r\n          disabled={!formValid}\r\n        >\r\n          Добавить\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CommentForm;\r\n","import { makeStyles } from \"@mui/styles\";\r\n\r\nexport const useStyle = makeStyles({\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    height: \"100%\",\r\n  },\r\n  wrapperList: {\r\n    overflow: \"auto\",\r\n    flex: 1,\r\n  },\r\n  commentsList: {\r\n    padding: \"10px\",\r\n  },\r\n  emptyTextWrapper: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    padding: \"50px 0\",\r\n  },\r\n});\r\n","import { useEffect, useState, useRef } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { List, Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport CommentItem from \"../CommentItem/CommentItem\";\r\nimport CommentForm from \"../CommentForm/CommentForm\";\r\nimport { useStyle } from \"./CommentsList.style\";\r\n\r\n/**\r\n * Компонент списка комментариев\r\n */\r\n\r\nconst CommentsList = () => {\r\n  const classes = useStyle();\r\n  const wrapperRef = useRef(null);\r\n  const [comments, setComments] = useState([\r\n    {\r\n      id: uuidv4(),\r\n      name: \"Kyle Mathews\",\r\n      email: \"mathews.kyle@gmail.com\",\r\n      timestamp: 1651777200000,\r\n      text: `A random paragraph can also be an excellent way for a writer\r\n             to tackle writers' block. Writing block can often happen due to being\r\n             stuck with a current project that the writer is trying to complete.\r\n             By inserting a completely random paragraph from which to begin,\r\n             it can take down some of the issues that may have been causing the writers'\r\n             block in the first place.`,\r\n      rating: 5,\r\n    },\r\n    {\r\n      id: uuidv4(),\r\n      name: \"Petr Petrov\",\r\n      email: \"Petrov@gmail.com\",\r\n      timestamp: 1674846000000,\r\n      text: `Another productive way to use this tool to begin a daily writing routine.\r\n             One way is to generate a random paragraph with the intention to try to rewrite\r\n             it while still keeping the original meaning. `,\r\n      rating: -11,\r\n    },\r\n    {\r\n      id: uuidv4(),\r\n      name: \"Roman Makhalin\",\r\n      email: \"rn_mahalin@mail.ru\",\r\n      timestamp: 1675969200000,\r\n      text: `The purpose here is to just get the\r\n             writing started so that when the writer goes onto their day's writing projects,\r\n             words are already flowing from their finger`,\r\n      rating: 10,\r\n    },\r\n  ]);\r\n\r\n  /**\r\n   * Добавление нового комментария\r\n   * @param {object} newComment - новый комментарий\r\n   */\r\n\r\n  const createNewComment = (newComment) => {\r\n    setComments((prevComment) => [...prevComment, newComment]);\r\n  };\r\n\r\n  /**\r\n   * Изменение рейтинга комментария\r\n   * @param {string} id - уникальный индитификатор\r\n   * @param {number} value - +1 || -1\r\n   */\r\n\r\n  const handleChangeRating = (id, value) => {\r\n    setComments((prevComments) =>\r\n      prevComments.map((comment) => ({\r\n        ...comment,\r\n        rating: comment.id === id ? comment.rating + value : comment.rating,\r\n      }))\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (wrapperRef.current) {\r\n      wrapperRef.current.scrollTo({\r\n        top: wrapperRef.current.scrollHeight - wrapperRef.current.offsetHeight,\r\n      });\r\n    }\r\n  }, [comments.length]);\r\n\r\n  return (\r\n    <Box className={classes.container}>\r\n      <Box className={classes.wrapperList} ref={wrapperRef}>\r\n        {comments.length ? (\r\n          <List className={classes.commentsList}>\r\n            {comments.map((comment) => (\r\n              <CommentItem\r\n                key={comment.id}\r\n                comment={comment}\r\n                handleChangeRating={handleChangeRating}\r\n              />\r\n            ))}\r\n          </List>\r\n        ) : (\r\n          <Box className={classes.emptyTextWrapper}>\r\n            <Typography variant=\"h4\">Нет комментариев</Typography>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n      <CommentForm createNewComment={createNewComment} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CommentsList;\r\n","import { makeStyles } from \"@mui/styles\";\r\n\r\nexport const useStyle = makeStyles({\r\n  app: {\r\n    boxShadow: \"0px 5px 10px 2px rgba(34, 60, 80, 0.2)\",\r\n    backgroundColor: \"#fff\",\r\n    height: \"100vh\",\r\n    overflow: \"hidden\",\r\n  },\r\n});\r\n","import { Container } from \"@mui/material\";\r\nimport CommentsList from \"./components/CommentsList/CommentsList\";\r\nimport { useStyle } from \"./App.style\";\r\n\r\n/**\r\n * Главный компонент приложения\r\n */\r\n\r\nconst App = () => {\r\n  const classes = useStyle();\r\n  return (\r\n    <Container className={classes.app}>\r\n      <CommentsList />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}